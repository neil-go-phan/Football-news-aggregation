// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.6.1
// source: crawler.proto

package grpcfile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HTMLClasses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleClass            string `protobuf:"bytes,1,opt,name=article_class,json=articleClass,proto3" json:"article_class,omitempty"`
	ArticleTitleClass       string `protobuf:"bytes,2,opt,name=article_title_class,json=articleTitleClass,proto3" json:"article_title_class,omitempty"`
	ArticleDescriptionClass string `protobuf:"bytes,3,opt,name=article_description_class,json=articleDescriptionClass,proto3" json:"article_description_class,omitempty"`
	ArticleLinkClass        string `protobuf:"bytes,4,opt,name=article_link_class,json=articleLinkClass,proto3" json:"article_link_class,omitempty"`
}

func (x *HTMLClasses) Reset() {
	*x = HTMLClasses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTMLClasses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTMLClasses) ProtoMessage() {}

func (x *HTMLClasses) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTMLClasses.ProtoReflect.Descriptor instead.
func (*HTMLClasses) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{0}
}

func (x *HTMLClasses) GetArticleClass() string {
	if x != nil {
		return x.ArticleClass
	}
	return ""
}

func (x *HTMLClasses) GetArticleTitleClass() string {
	if x != nil {
		return x.ArticleTitleClass
	}
	return ""
}

func (x *HTMLClasses) GetArticleDescriptionClass() string {
	if x != nil {
		return x.ArticleDescriptionClass
	}
	return ""
}

func (x *HTMLClasses) GetArticleLinkClass() string {
	if x != nil {
		return x.ArticleLinkClass
	}
	return ""
}

// The request message containing leagues and html class
type AllConfigsArticles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leagues     []string     `protobuf:"bytes,1,rep,name=leagues,proto3" json:"leagues,omitempty"`
	HtmlClasses *HTMLClasses `protobuf:"bytes,2,opt,name=html_classes,json=htmlClasses,proto3" json:"html_classes,omitempty"`
}

func (x *AllConfigsArticles) Reset() {
	*x = AllConfigsArticles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllConfigsArticles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllConfigsArticles) ProtoMessage() {}

func (x *AllConfigsArticles) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllConfigsArticles.ProtoReflect.Descriptor instead.
func (*AllConfigsArticles) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{1}
}

func (x *AllConfigsArticles) GetLeagues() []string {
	if x != nil {
		return x.Leagues
	}
	return nil
}

func (x *AllConfigsArticles) GetHtmlClasses() *HTMLClasses {
	if x != nil {
		return x.HtmlClasses
	}
	return nil
}

type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Link        string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{2}
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Article) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

// The response message containing the articles
type ArticlesReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	League   string     `protobuf:"bytes,1,opt,name=league,proto3" json:"league,omitempty"`
	Articles []*Article `protobuf:"bytes,2,rep,name=articles,proto3" json:"articles,omitempty"`
}

func (x *ArticlesReponse) Reset() {
	*x = ArticlesReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticlesReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlesReponse) ProtoMessage() {}

func (x *ArticlesReponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlesReponse.ProtoReflect.Descriptor instead.
func (*ArticlesReponse) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{3}
}

func (x *ArticlesReponse) GetLeague() string {
	if x != nil {
		return x.League
	}
	return ""
}

func (x *ArticlesReponse) GetArticles() []*Article {
	if x != nil {
		return x.Articles
	}
	return nil
}

type SchedulesReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateFormated      string              `protobuf:"bytes,1,opt,name=DateFormated,proto3" json:"DateFormated,omitempty"`
	ScheduleOnLeagues []*ScheduleOnLeague `protobuf:"bytes,2,rep,name=ScheduleOnLeagues,proto3" json:"ScheduleOnLeagues,omitempty"`
}

func (x *SchedulesReponse) Reset() {
	*x = SchedulesReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchedulesReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchedulesReponse) ProtoMessage() {}

func (x *SchedulesReponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchedulesReponse.ProtoReflect.Descriptor instead.
func (*SchedulesReponse) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{4}
}

func (x *SchedulesReponse) GetDateFormated() string {
	if x != nil {
		return x.DateFormated
	}
	return ""
}

func (x *SchedulesReponse) GetScheduleOnLeagues() []*ScheduleOnLeague {
	if x != nil {
		return x.ScheduleOnLeagues
	}
	return nil
}

type ScheduleOnLeague struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeagueName string   `protobuf:"bytes,1,opt,name=LeagueName,proto3" json:"LeagueName,omitempty"`
	Matchs     []*Match `protobuf:"bytes,2,rep,name=Matchs,proto3" json:"Matchs,omitempty"`
}

func (x *ScheduleOnLeague) Reset() {
	*x = ScheduleOnLeague{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleOnLeague) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleOnLeague) ProtoMessage() {}

func (x *ScheduleOnLeague) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleOnLeague.ProtoReflect.Descriptor instead.
func (*ScheduleOnLeague) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{5}
}

func (x *ScheduleOnLeague) GetLeagueName() string {
	if x != nil {
		return x.LeagueName
	}
	return ""
}

func (x *ScheduleOnLeague) GetMatchs() []*Match {
	if x != nil {
		return x.Matchs
	}
	return nil
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time            string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Round           string `protobuf:"bytes,2,opt,name=Round,proto3" json:"Round,omitempty"`
	Club1           *Club  `protobuf:"bytes,3,opt,name=Club1,proto3" json:"Club1,omitempty"`
	Club2           *Club  `protobuf:"bytes,4,opt,name=Club2,proto3" json:"Club2,omitempty"`
	Scores          string `protobuf:"bytes,6,opt,name=Scores,proto3" json:"Scores,omitempty"`
	MatchDetailLink string `protobuf:"bytes,7,opt,name=MatchDetailLink,proto3" json:"MatchDetailLink,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{6}
}

func (x *Match) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *Match) GetRound() string {
	if x != nil {
		return x.Round
	}
	return ""
}

func (x *Match) GetClub1() *Club {
	if x != nil {
		return x.Club1
	}
	return nil
}

func (x *Match) GetClub2() *Club {
	if x != nil {
		return x.Club2
	}
	return nil
}

func (x *Match) GetScores() string {
	if x != nil {
		return x.Scores
	}
	return ""
}

func (x *Match) GetMatchDetailLink() string {
	if x != nil {
		return x.MatchDetailLink
	}
	return ""
}

type Club struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Logo string `protobuf:"bytes,2,opt,name=Logo,proto3" json:"Logo,omitempty"`
}

func (x *Club) Reset() {
	*x = Club{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Club) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Club) ProtoMessage() {}

func (x *Club) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Club.ProtoReflect.Descriptor instead.
func (*Club) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{7}
}

func (x *Club) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Club) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

type MatchDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	MatchDetailTitle *MatchDetailTitle `protobuf:"bytes,2,opt,name=MatchDetailTitle,proto3" json:"MatchDetailTitle,omitempty"`
	MatchOverview    *MatchOverview    `protobuf:"bytes,3,opt,name=MatchOverview,proto3" json:"MatchOverview,omitempty"`
	MatchStatistics  *MatchStatistics  `protobuf:"bytes,4,opt,name=MatchStatistics,proto3" json:"MatchStatistics,omitempty"`
	MatchLineup      *MatchLineup      `protobuf:"bytes,5,opt,name=MatchLineup,proto3" json:"MatchLineup,omitempty"`
	MatchProgress    *MatchProgress    `protobuf:"bytes,6,opt,name=MatchProgress,proto3" json:"MatchProgress,omitempty"`
}

func (x *MatchDetail) Reset() {
	*x = MatchDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetail) ProtoMessage() {}

func (x *MatchDetail) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetail.ProtoReflect.Descriptor instead.
func (*MatchDetail) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{8}
}

func (x *MatchDetail) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MatchDetail) GetMatchDetailTitle() *MatchDetailTitle {
	if x != nil {
		return x.MatchDetailTitle
	}
	return nil
}

func (x *MatchDetail) GetMatchOverview() *MatchOverview {
	if x != nil {
		return x.MatchOverview
	}
	return nil
}

func (x *MatchDetail) GetMatchStatistics() *MatchStatistics {
	if x != nil {
		return x.MatchStatistics
	}
	return nil
}

func (x *MatchDetail) GetMatchLineup() *MatchLineup {
	if x != nil {
		return x.MatchLineup
	}
	return nil
}

func (x *MatchDetail) GetMatchProgress() *MatchProgress {
	if x != nil {
		return x.MatchProgress
	}
	return nil
}

type MatchDetailTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Club1      *Club  `protobuf:"bytes,1,opt,name=Club1,proto3" json:"Club1,omitempty"`
	Club2      *Club  `protobuf:"bytes,2,opt,name=Club2,proto3" json:"Club2,omitempty"`
	MatchScore string `protobuf:"bytes,3,opt,name=MatchScore,proto3" json:"MatchScore,omitempty"`
}

func (x *MatchDetailTitle) Reset() {
	*x = MatchDetailTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetailTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetailTitle) ProtoMessage() {}

func (x *MatchDetailTitle) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetailTitle.ProtoReflect.Descriptor instead.
func (*MatchDetailTitle) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{9}
}

func (x *MatchDetailTitle) GetClub1() *Club {
	if x != nil {
		return x.Club1
	}
	return nil
}

func (x *MatchDetailTitle) GetClub2() *Club {
	if x != nil {
		return x.Club2
	}
	return nil
}

func (x *MatchDetailTitle) GetMatchScore() string {
	if x != nil {
		return x.MatchScore
	}
	return ""
}

type MatchOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Club1Overview []*OverviewItem `protobuf:"bytes,1,rep,name=Club1Overview,proto3" json:"Club1Overview,omitempty"`
	Club2Overview []*OverviewItem `protobuf:"bytes,2,rep,name=Club2Overview,proto3" json:"Club2Overview,omitempty"`
}

func (x *MatchOverview) Reset() {
	*x = MatchOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchOverview) ProtoMessage() {}

func (x *MatchOverview) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchOverview.ProtoReflect.Descriptor instead.
func (*MatchOverview) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{10}
}

func (x *MatchOverview) GetClub1Overview() []*OverviewItem {
	if x != nil {
		return x.Club1Overview
	}
	return nil
}

func (x *MatchOverview) GetClub2Overview() []*OverviewItem {
	if x != nil {
		return x.Club2Overview
	}
	return nil
}

type OverviewItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info      string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	ImageType string `protobuf:"bytes,2,opt,name=ImageType,proto3" json:"ImageType,omitempty"`
	Time      string `protobuf:"bytes,3,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *OverviewItem) Reset() {
	*x = OverviewItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewItem) ProtoMessage() {}

func (x *OverviewItem) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewItem.ProtoReflect.Descriptor instead.
func (*OverviewItem) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{11}
}

func (x *OverviewItem) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *OverviewItem) GetImageType() string {
	if x != nil {
		return x.ImageType
	}
	return ""
}

func (x *OverviewItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type MatchStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string            `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Statistics []*StatisticsItem `protobuf:"bytes,2,rep,name=Statistics,proto3" json:"Statistics,omitempty"`
}

func (x *MatchStatistics) Reset() {
	*x = MatchStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStatistics) ProtoMessage() {}

func (x *MatchStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStatistics.ProtoReflect.Descriptor instead.
func (*MatchStatistics) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{12}
}

func (x *MatchStatistics) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MatchStatistics) GetStatistics() []*StatisticsItem {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type StatisticsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatClub1   string `protobuf:"bytes,1,opt,name=StatClub1,proto3" json:"StatClub1,omitempty"`
	StatContent string `protobuf:"bytes,2,opt,name=StatContent,proto3" json:"StatContent,omitempty"`
	StatClub2   string `protobuf:"bytes,3,opt,name=StatClub2,proto3" json:"StatClub2,omitempty"`
}

func (x *StatisticsItem) Reset() {
	*x = StatisticsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsItem) ProtoMessage() {}

func (x *StatisticsItem) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsItem.ProtoReflect.Descriptor instead.
func (*StatisticsItem) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{13}
}

func (x *StatisticsItem) GetStatClub1() string {
	if x != nil {
		return x.StatClub1
	}
	return ""
}

func (x *StatisticsItem) GetStatContent() string {
	if x != nil {
		return x.StatContent
	}
	return ""
}

func (x *StatisticsItem) GetStatClub2() string {
	if x != nil {
		return x.StatClub2
	}
	return ""
}

type MatchProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string        `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Events []*MatchEvent `protobuf:"bytes,2,rep,name=Events,proto3" json:"Events,omitempty"`
}

func (x *MatchProgress) Reset() {
	*x = MatchProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchProgress) ProtoMessage() {}

func (x *MatchProgress) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchProgress.ProtoReflect.Descriptor instead.
func (*MatchProgress) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{14}
}

func (x *MatchProgress) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MatchProgress) GetEvents() []*MatchEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type MatchEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time    string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *MatchEvent) Reset() {
	*x = MatchEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchEvent) ProtoMessage() {}

func (x *MatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchEvent.ProtoReflect.Descriptor instead.
func (*MatchEvent) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{15}
}

func (x *MatchEvent) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *MatchEvent) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type MatchLineup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	LineupClub1 string `protobuf:"bytes,2,opt,name=LineupClub1,proto3" json:"LineupClub1,omitempty"`
	DetailClub1 string `protobuf:"bytes,3,opt,name=DetailClub1,proto3" json:"DetailClub1,omitempty"`
	LineupClub2 string `protobuf:"bytes,4,opt,name=LineupClub2,proto3" json:"LineupClub2,omitempty"`
	DetailClub2 string `protobuf:"bytes,5,opt,name=DetailClub2,proto3" json:"DetailClub2,omitempty"`
}

func (x *MatchLineup) Reset() {
	*x = MatchLineup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchLineup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchLineup) ProtoMessage() {}

func (x *MatchLineup) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchLineup.ProtoReflect.Descriptor instead.
func (*MatchLineup) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{16}
}

func (x *MatchLineup) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MatchLineup) GetLineupClub1() string {
	if x != nil {
		return x.LineupClub1
	}
	return ""
}

func (x *MatchLineup) GetDetailClub1() string {
	if x != nil {
		return x.DetailClub1
	}
	return ""
}

func (x *MatchLineup) GetLineupClub2() string {
	if x != nil {
		return x.LineupClub2
	}
	return ""
}

func (x *MatchLineup) GetDetailClub2() string {
	if x != nil {
		return x.DetailClub2
	}
	return ""
}

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{17}
}

func (x *Date) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type MatchURLs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url []string `protobuf:"bytes,1,rep,name=url,proto3" json:"url,omitempty"`
}

func (x *MatchURLs) Reset() {
	*x = MatchURLs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crawler_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchURLs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchURLs) ProtoMessage() {}

func (x *MatchURLs) ProtoReflect() protoreflect.Message {
	mi := &file_crawler_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchURLs.ProtoReflect.Descriptor instead.
func (*MatchURLs) Descriptor() ([]byte, []int) {
	return file_crawler_proto_rawDescGZIP(), []int{18}
}

func (x *MatchURLs) GetUrl() []string {
	if x != nil {
		return x.Url
	}
	return nil
}

var File_crawler_proto protoreflect.FileDescriptor

var file_crawler_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01,
	0x0a, 0x0b, 0x48, 0x54, 0x4d, 0x4c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x6c, 0x0a, 0x12,
	0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c,
	0x68, 0x74, 0x6d, 0x6c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x54, 0x4d, 0x4c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x0b, 0x68,
	0x74, 0x6d, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x07, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x22, 0x5c, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x31, 0x0a, 0x08,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22,
	0x84, 0x01, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x44, 0x61, 0x74, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x11, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x6e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x6e, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x52, 0x11, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x6e, 0x4c,
	0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x4f, 0x6e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x06, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x43,
	0x6c, 0x75, 0x62, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x05,
	0x43, 0x6c, 0x75, 0x62, 0x31, 0x12, 0x28, 0x0a, 0x05, 0x43, 0x6c, 0x75, 0x62, 0x32, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x05, 0x43, 0x6c, 0x75, 0x62, 0x32, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0x2e, 0x0a, 0x04, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67,
	0x6f, 0x22, 0xf5, 0x02, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x4a, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x10, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a,
	0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x47, 0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x41, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x43, 0x6c, 0x75, 0x62, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x05, 0x43, 0x6c, 0x75, 0x62, 0x31, 0x12, 0x28, 0x0a, 0x05, 0x43, 0x6c, 0x75, 0x62,
	0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x05, 0x43, 0x6c, 0x75,
	0x62, 0x32, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x62, 0x31, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x43, 0x6c, 0x75, 0x62, 0x31, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x62, 0x32, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x43, 0x6c, 0x75, 0x62, 0x32,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x22, 0x54, 0x0a, 0x0c, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x65,
	0x0a, 0x0f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x6e, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x43,
	0x6c, 0x75, 0x62, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x43, 0x6c, 0x75, 0x62, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x43,
	0x6c, 0x75, 0x62, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74,
	0x43, 0x6c, 0x75, 0x62, 0x32, 0x22, 0x57, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x06,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3a,
	0x0a, 0x0a, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x43, 0x6c, 0x75, 0x62, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x43, 0x6c, 0x75,
	0x62, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43, 0x6c, 0x75, 0x62,
	0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x43,
	0x6c, 0x75, 0x62, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x43, 0x6c,
	0x75, 0x62, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x69, 0x6e, 0x65, 0x75,
	0x70, 0x43, 0x6c, 0x75, 0x62, 0x32, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x43, 0x6c, 0x75, 0x62, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x43, 0x6c, 0x75, 0x62, 0x32, 0x22, 0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x32, 0xf9, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x1a, 0x1d, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x4f, 0x6e, 0x44, 0x61, 0x79, 0x12,
	0x12, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x1a, 0x1e, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x52, 0x4c, 0x73,
	0x1a, 0x19, 0x2e, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65,
	0x69, 0x6c, 0x2d, 0x67, 0x6f, 0x2d, 0x70, 0x68, 0x61, 0x6e, 0x2f, 0x46, 0x6f, 0x6f, 0x74, 0x62,
	0x61, 0x6c, 0x6c, 0x2d, 0x6e, 0x65, 0x77, 0x73, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crawler_proto_rawDescOnce sync.Once
	file_crawler_proto_rawDescData = file_crawler_proto_rawDesc
)

func file_crawler_proto_rawDescGZIP() []byte {
	file_crawler_proto_rawDescOnce.Do(func() {
		file_crawler_proto_rawDescData = protoimpl.X.CompressGZIP(file_crawler_proto_rawDescData)
	})
	return file_crawler_proto_rawDescData
}

var file_crawler_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_crawler_proto_goTypes = []interface{}{
	(*HTMLClasses)(nil),        // 0: crawlerproto.HTMLClasses
	(*AllConfigsArticles)(nil), // 1: crawlerproto.AllConfigsArticles
	(*Article)(nil),            // 2: crawlerproto.Article
	(*ArticlesReponse)(nil),    // 3: crawlerproto.ArticlesReponse
	(*SchedulesReponse)(nil),   // 4: crawlerproto.SchedulesReponse
	(*ScheduleOnLeague)(nil),   // 5: crawlerproto.ScheduleOnLeague
	(*Match)(nil),              // 6: crawlerproto.Match
	(*Club)(nil),               // 7: crawlerproto.Club
	(*MatchDetail)(nil),        // 8: crawlerproto.MatchDetail
	(*MatchDetailTitle)(nil),   // 9: crawlerproto.MatchDetailTitle
	(*MatchOverview)(nil),      // 10: crawlerproto.MatchOverview
	(*OverviewItem)(nil),       // 11: crawlerproto.OverviewItem
	(*MatchStatistics)(nil),    // 12: crawlerproto.MatchStatistics
	(*StatisticsItem)(nil),     // 13: crawlerproto.StatisticsItem
	(*MatchProgress)(nil),      // 14: crawlerproto.MatchProgress
	(*MatchEvent)(nil),         // 15: crawlerproto.MatchEvent
	(*MatchLineup)(nil),        // 16: crawlerproto.MatchLineup
	(*Date)(nil),               // 17: crawlerproto.Date
	(*MatchURLs)(nil),          // 18: crawlerproto.MatchURLs
}
var file_crawler_proto_depIdxs = []int32{
	0,  // 0: crawlerproto.AllConfigsArticles.html_classes:type_name -> crawlerproto.HTMLClasses
	2,  // 1: crawlerproto.ArticlesReponse.articles:type_name -> crawlerproto.Article
	5,  // 2: crawlerproto.SchedulesReponse.ScheduleOnLeagues:type_name -> crawlerproto.ScheduleOnLeague
	6,  // 3: crawlerproto.ScheduleOnLeague.Matchs:type_name -> crawlerproto.Match
	7,  // 4: crawlerproto.Match.Club1:type_name -> crawlerproto.Club
	7,  // 5: crawlerproto.Match.Club2:type_name -> crawlerproto.Club
	9,  // 6: crawlerproto.MatchDetail.MatchDetailTitle:type_name -> crawlerproto.MatchDetailTitle
	10, // 7: crawlerproto.MatchDetail.MatchOverview:type_name -> crawlerproto.MatchOverview
	12, // 8: crawlerproto.MatchDetail.MatchStatistics:type_name -> crawlerproto.MatchStatistics
	16, // 9: crawlerproto.MatchDetail.MatchLineup:type_name -> crawlerproto.MatchLineup
	14, // 10: crawlerproto.MatchDetail.MatchProgress:type_name -> crawlerproto.MatchProgress
	7,  // 11: crawlerproto.MatchDetailTitle.Club1:type_name -> crawlerproto.Club
	7,  // 12: crawlerproto.MatchDetailTitle.Club2:type_name -> crawlerproto.Club
	11, // 13: crawlerproto.MatchOverview.Club1Overview:type_name -> crawlerproto.OverviewItem
	11, // 14: crawlerproto.MatchOverview.Club2Overview:type_name -> crawlerproto.OverviewItem
	13, // 15: crawlerproto.MatchStatistics.Statistics:type_name -> crawlerproto.StatisticsItem
	15, // 16: crawlerproto.MatchProgress.Events:type_name -> crawlerproto.MatchEvent
	1,  // 17: crawlerproto.CrawlerService.GetArticles:input_type -> crawlerproto.AllConfigsArticles
	17, // 18: crawlerproto.CrawlerService.GetSchedulesOnDay:input_type -> crawlerproto.Date
	18, // 19: crawlerproto.CrawlerService.GetMatchDetail:input_type -> crawlerproto.MatchURLs
	3,  // 20: crawlerproto.CrawlerService.GetArticles:output_type -> crawlerproto.ArticlesReponse
	4,  // 21: crawlerproto.CrawlerService.GetSchedulesOnDay:output_type -> crawlerproto.SchedulesReponse
	8,  // 22: crawlerproto.CrawlerService.GetMatchDetail:output_type -> crawlerproto.MatchDetail
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_crawler_proto_init() }
func file_crawler_proto_init() {
	if File_crawler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crawler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTMLClasses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllConfigsArticles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticlesReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchedulesReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleOnLeague); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Club); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetailTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchLineup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crawler_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchURLs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crawler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawler_proto_goTypes,
		DependencyIndexes: file_crawler_proto_depIdxs,
		MessageInfos:      file_crawler_proto_msgTypes,
	}.Build()
	File_crawler_proto = out.File
	file_crawler_proto_rawDesc = nil
	file_crawler_proto_goTypes = nil
	file_crawler_proto_depIdxs = nil
}
