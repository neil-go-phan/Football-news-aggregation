// Code generated by mockery v2.20.0. DO NOT EDIT.

package repository

import (
	entities "server/entities"

	mock "github.com/stretchr/testify/mock"
)

// MockStatsItemlRepository is an autogenerated mock type for the StatsItemlRepository type
type MockStatsItemlRepository struct {
	mock.Mock
}

type MockStatsItemlRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockStatsItemlRepository) EXPECT() *MockStatsItemlRepository_Expecter {
	return &MockStatsItemlRepository_Expecter{mock: &_m.Mock}
}

// FirstOrCreate provides a mock function with given fields: statsItem
func (_m *MockStatsItemlRepository) FirstOrCreate(statsItem *entities.StatisticsItem) error {
	ret := _m.Called(statsItem)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.StatisticsItem) error); ok {
		r0 = rf(statsItem)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockStatsItemlRepository_FirstOrCreate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FirstOrCreate'
type MockStatsItemlRepository_FirstOrCreate_Call struct {
	*mock.Call
}

// FirstOrCreate is a helper method to define mock.On call
//   - statsItem *entities.StatisticsItem
func (_e *MockStatsItemlRepository_Expecter) FirstOrCreate(statsItem interface{}) *MockStatsItemlRepository_FirstOrCreate_Call {
	return &MockStatsItemlRepository_FirstOrCreate_Call{Call: _e.mock.On("FirstOrCreate", statsItem)}
}

func (_c *MockStatsItemlRepository_FirstOrCreate_Call) Run(run func(statsItem *entities.StatisticsItem)) *MockStatsItemlRepository_FirstOrCreate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*entities.StatisticsItem))
	})
	return _c
}

func (_c *MockStatsItemlRepository_FirstOrCreate_Call) Return(_a0 error) *MockStatsItemlRepository_FirstOrCreate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockStatsItemlRepository_FirstOrCreate_Call) RunAndReturn(run func(*entities.StatisticsItem) error) *MockStatsItemlRepository_FirstOrCreate_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockStatsItemlRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockStatsItemlRepository creates a new instance of MockStatsItemlRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockStatsItemlRepository(t mockConstructorTestingTNewMockStatsItemlRepository) *MockStatsItemlRepository {
	mock := &MockStatsItemlRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
